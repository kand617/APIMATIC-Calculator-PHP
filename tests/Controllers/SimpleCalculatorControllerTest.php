<?php
/*
 * Test
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

namespace TestLib\Tests;

use TestLib\APIException;
use TestLib\Exceptions;
use TestLib\APIHelper;
use TestLib\Models;

class SimpleCalculatorControllerTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var \TestLib\Controllers\SimpleCalculatorController Controller instance
     */
    protected static $controller;

    /**
     * @var HttpCallBackCatcher Callback
     */
    protected $httpResponse;

    /**
     * Setup test class
     */
    public static function setUpBeforeClass()
    {
        $client = new \TestLib\TestClient();
        self::$controller = $client->getSimpleCalculator();
    }

    /**
     * Setup test
     */
    protected function setUp()
    {
        $this->httpResponse = new HttpCallBackCatcher();
    }

    /**
     * Check if multiplication works
     */
    public function testMultiply()
    {
        // Parameters for the API call
        $input = array();
        $input['operation'] = APIHelper::deserialize(
            'MULTIPLY',
            new Models\string()
        );
        $input['x'] = 4;
        $input['y'] = 5;

        // Set callback and perform API call
        $result = null;
        self::$controller->setHttpCallBack($this->httpResponse);
        try {
            $result = self::$controller->getCalculate($input);
        } catch (APIException $e) {
        }

        // Test response code
        $this->assertEquals(
            200,
            $this->httpResponse->getResponse()->getStatusCode(),
            "Status is not 200"
        );

        // Test whether the captured response is as we expected
        $this->assertNotNull($result, "Result does not exist");
 

        $this->assertEquals(
            20,
            $result,
            "Response does not match expected value",
            ASSERT_PRECISION
        );
    }
}
